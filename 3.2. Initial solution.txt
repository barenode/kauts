3.2. Initial solution
A parallel greedy insertion method is adopted to generate an initial solution. 
In other words, we first assign the nearest | R | customers to the depot as the first customer in the routes, followed by the computation of the insertion costs for the remaining customers. The customer with the lowest insertion cost (among all routes) is then assigned accordingly. In the case of a tie, the customer with a precedent index is chosen. These steps are repeated until all customers are inserted. If a feasible insertion is not found for a customer ‘ a ’, we employ a simple perturbation strategy by considering removing an existing customer, say customer ‘ b ’ one-by-one systematically from the routes and inserting customer ‘ a ’ in this route, where this move must be a feasible move irrespective of the cost of insertion. Customer ‘ b ’ will then be inserted to another route by repeating the same process until both customers ‘ a ’ and ‘ b ’ are inserted or the termination criterion is reached. Here, we maintain a simple tabu list of size ts = max (5 , 0 . 01 n ) to prevent the same customers to be deleted each time. When a customer (‘ a ’ or ‘ b ’) is inserted, it is flagged tabu so that it will not be deleted in the next ts iterations. This perturbation strategy terminates when there is no other customer that can be deleted from the routes to enable a feasible insertion of customer ‘ b ’. For this case, customer ‘ b ’ is added to the route with the smallest capacity violation and the route is penalized accordingly as will be discussed in Section 3.4 .
[2]